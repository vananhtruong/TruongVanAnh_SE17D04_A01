@page
@model TVANewManagementSystemRazorPage.Pages.Staff.StaffNewsArticles.IndexModel

@{
    ViewData["Title"] = "News Articles";
    Layout = "~/Pages/Shared/_LayoutStaff.cshtml";
}

<div class="container-fluid py-5">
    <div class="card shadow-sm border-0 mx-auto" style="max-width: 1400px;">
        <div class="card-header bg-dark text-white p-4">
            <h1 class="h3 mb-0 fw-bold">News Articles</h1>
        </div>
        <div class="card-body p-4">
            <!-- Search and Buttons -->
            <div class="d-flex flex-wrap justify-content-between align-items-center mb-4 gap-3">
                <form class="input-group" style="max-width: 600px;" method="get">
                    <select name="CategoryId" class="form-select" style="max-width: 200px;" asp-items="@((SelectList)ViewData["CategoryId"])">
                        <option value="">All Categories</option>
                    </select>
                    <span class="input-group-text bg-light border-0">
                        <i class="fas fa-search"></i>
                    </span>
                    <input type="text" id="searchInput" name="SearchString" class="form-control"
                           placeholder="Search articles..." value="@Model.SearchString">
                    <div class="input-group-text bg-light border-0">
                        <input type="checkbox" id="createdByMe" name="CreatedByMe" value="true"
                        @(Model.CreatedByMe ? "checked" : "")>
                        <label for="createdByMe" class="ms-2 mb-0">Created by Me</label>
                    </div>
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-search me-1"></i> Search
                    </button>
                </form>
                <div class="d-flex gap-2">
                    <a class="btn btn-outline-secondary" asp-page="./Index" asp-route-searchString="" asp-route-categoryId="" asp-route-createdByMe="">
                        Clear Search
                    </a>
                    <a class="btn btn-success" asp-page="./Create">
                        <i class="fas fa-plus me-1"></i> Create New
                    </a>
                </div>
            </div>

            <!-- Table with sortable headers -->
            <div class="table-responsive">
                <table class="table table-striped table-hover table-bordered" id="newsTable" style="width: 100%;">
                    <thead class="table-dark">
                        <tr>
                            <th class="sortable" data-column="0" style="max-width: 200px; cursor: pointer;">
                                @Html.DisplayNameFor(model => model.NewsArticles[0].NewsTitle)
                                <span class="sort-icon"></span>
                            </th>
                            <th class="sortable" data-column="1" style="max-width: 150px; cursor: pointer;">
                                @Html.DisplayNameFor(model => model.NewsArticles[0].Headline)
                                <span class="sort-icon"></span>
                            </th>
                            <th class="sortable" data-column="2" style="max-width: 120px; cursor: pointer;">
                                @Html.DisplayNameFor(model => model.NewsArticles[0].CreatedDate)
                                <span class="sort-icon"></span>
                            </th>
                            <th class="sortable" data-column="3" style="max-width: 100px; cursor: pointer;">
                                @Html.DisplayNameFor(model => model.NewsArticles[0].NewsStatus)
                                <span class="sort-icon"></span>
                            </th>
                            <th style="width: 150px;">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.NewsArticles)
                        {
                            <tr>
                                <td class="text-truncate" style="max-width: 200px;" title="@item.NewsTitle">
                                    @Html.DisplayFor(modelItem => item.NewsTitle)
                                </td>
                                <td class="text-truncate" style="max-width: 150px;" title="@item.Headline">
                                    @Html.DisplayFor(modelItem => item.Headline)
                                </td>
                                <td style="max-width: 120px;" data-date="@item.CreatedDate?.ToString("yyyy-MM-dd")">
                                    @Html.DisplayFor(modelItem => item.CreatedDate, "{0:MMM dd, yyyy}")
                                </td>
                                <td style="max-width: 100px;">
                                    @Html.DisplayFor(modelItem => item.NewsStatus)
                                </td>
                                <td style="width: 150px;">
                                    <a class="btn btn-warning btn-sm me-1" asp-page="./Edit" asp-route-id="@item.NewsArticleId">
                                        <i class="fas fa-edit"></i>
                                    </a>
                                    <a class="btn btn-info btn-sm me-1" asp-page="./Details" asp-route-id="@item.NewsArticleId">
                                        <i class="fas fa-info-circle"></i>
                                    </a>
                                    <a class="btn btn-danger btn-sm" asp-page="./Delete" asp-route-id="@item.NewsArticleId"
                                       onclick="return confirm('Are you sure you want to delete this item?');">
                                        <i class="fas fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>

            <!-- Pagination -->
            <nav aria-label="Page navigation" class="mt-4">
                <ul class="pagination justify-content-center">
                    <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                        <a class="page-link" asp-page="./Index"
                           asp-route-pageNumber="@(Model.PageNumber - 1)"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-searchString="@Model.SearchString"
                           asp-route-categoryId="@Model.CategoryId"
                           asp-route-createdByMe="@Model.CreatedByMe">Previous</a>
                    </li>
                    @for (int i = 1; i <= Model.TotalPages; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" asp-page="./Index"
                               asp-route-pageNumber="@i"
                               asp-route-pageSize="@Model.PageSize"
                               asp-route-searchString="@Model.SearchString"
                               asp-route-categoryId="@Model.CategoryId"
                               asp-route-createdByMe="@Model.CreatedByMe">@i</a>
                        </li>
                    }
                    <li class="page-item @(Model.PageNumber == Model.TotalPages ? "disabled" : "")">
                        <a class="page-link" asp-page="./Index"
                           asp-route-pageNumber="@(Model.PageNumber + 1)"
                           asp-route-pageSize="@Model.PageSize"
                           asp-route-searchString="@Model.SearchString"
                           asp-route-categoryId="@Model.CategoryId"
                           asp-route-createdByMe="@Model.CreatedByMe">Next</a>
                    </li>
                </ul>
            </nav>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const table = document.getElementById('newsTable');
            const headers = table.querySelectorAll('.sortable');
            let sortDirection = 1;
            let lastSortedColumn = -1;

            headers.forEach(header => {
                header.addEventListener('click', () => {
                    const columnIndex = parseInt(header.getAttribute('data-column'));
                    const isSameColumn = lastSortedColumn === columnIndex;

                    sortDirection = isSameColumn ? -sortDirection : 1;
                    lastSortedColumn = columnIndex;

                    headers.forEach(h => {
                        const icon = h.querySelector('.sort-icon');
                        icon.innerHTML = '';
                        if (h === header) {
                            icon.innerHTML = sortDirection === 1 ? '↑' : '↓';
                        }
                    });

                    sortTable(columnIndex);
                });
            });

            function sortTable(columnIndex) {
                const tbody = table.querySelector('tbody');
                const rows = Array.from(tbody.querySelectorAll('tr'));

                rows.sort((a, b) => {
                    let aValue = a.cells[columnIndex].textContent.trim();
                    let bValue = b.cells[columnIndex].textContent.trim();

                    if (columnIndex === 2) {
                        aValue = a.cells[columnIndex].getAttribute('data-date') || aValue;
                        bValue = b.cells[columnIndex].getAttribute('data-date') || bValue;
                        return sortDirection * (new Date(aValue) - new Date(bValue));
                    }
                    else if (columnIndex === 3) {
                        aValue = aValue.toLowerCase() === 'true' ? 1 : 0;
                        bValue = bValue.toLowerCase() === 'true' ? 1 : 0;
                        return sortDirection * (aValue - bValue);
                    }
                    return sortDirection * aValue.localeCompare(bValue);
                });

                rows.forEach(row => tbody.appendChild(row));
            }
        });
    </script>

    <style>
        .sortable:hover {
            background-color: #343a40;
        }

        .sort-icon {
            float: right;
            width: 20px;
            text-align: center;
        }
    </style>
}
