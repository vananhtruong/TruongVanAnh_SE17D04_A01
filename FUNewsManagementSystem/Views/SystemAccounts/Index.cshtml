@model IEnumerable<BusinessObjects.Models.SystemAccount>

@{
    ViewData["Title"] = "System Accounts";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";

    // Lấy role từ ViewBag
    var roleMapping = ViewBag.RoleMapping as Dictionary<int, string>;
}

<div class="card shadow-sm">
    <!-- Card Header -->
    <div class="card-header bg-dark text-white d-flex justify-content-between align-items-center">
        <h5 class="mb-0">System Accounts</h5>
        <div class="d-flex align-items-center gap-3">
            <!-- Search Form -->
            <form asp-action="Index" method="get" class="d-flex align-items-center">
                <div class="input-group input-group-sm">
                    <input class="form-control"
                           type="search"
                           name="searchString"
                           placeholder="Search by name or email..."
                           value="@ViewBag.CurrentFilter"
                           aria-label="Search">
                    <button class="btn btn-outline-light" type="submit">
                        <i class="bi bi-search"></i>
                    </button>
                </div>
            </form>
            <!-- Create Button -->
            <a asp-action="Create" class="btn btn-success btn-sm">
                <i class="bi bi-plus-lg me-1"></i> Add New
            </a>
        </div>
    </div>

    <!-- Card Body -->
    <div class="card-body p-0">
        <div class="table-responsive">
            <table class="table table-hover table-borderless mb-0">
                <thead class="table-light sticky-top">
                    <tr>
                        <th scope="col" class="ps-4">@Html.DisplayNameFor(model => model.AccountName)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.AccountEmail)</th>
                        <th scope="col">@Html.DisplayNameFor(model => model.AccountRole)</th>
                        <th scope="col" class="text-end pe-4">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (!Model?.Any() ?? true)
                    {
                        <tr>
                            <td colspan="4" class="text-center py-4 text-muted">
                                <i class="bi bi-exclamation-circle me-2"></i> No accounts found
                            </td>
                        </tr>
                    }
                    else
                    {
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td class="ps-4 align-middle">
                                    @Html.DisplayFor(modelItem => item.AccountName)
                                </td>
                                <td class="align-middle">
                                    <a href="mailto:@item.AccountEmail" class="text-decoration-none">
                                        @Html.DisplayFor(modelItem => item.AccountEmail)
                                    </a>
                                </td>
                                <td class="align-middle">
                                    <span class="badge bg-primary-subtle text-primary">
                                        @(item.AccountRole.HasValue && roleMapping != null && roleMapping.ContainsKey(item.AccountRole.Value)
                                            ? roleMapping[item.AccountRole.Value]
                                            : item.AccountRole?.ToString() ?? "N/A")
                                    </span>
                                </td>
                                <td class="text-end pe-4 align-middle">
                                    <div class="btn-group btn-group-sm">
                                        <a asp-action="Details"
                                           asp-route-id="@item.AccountId"
                                           class="btn btn-outline-info"
                                           title="Details">
                                            <i class="bi bi-info-circle"></i>
                                        </a>
                                        <a asp-action="Edit"
                                           asp-route-id="@item.AccountId"
                                           class="btn btn-outline-primary"
                                           title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <a asp-action="Delete"
                                           asp-route-id="@item.AccountId"
                                           class="btn btn-outline-danger"
                                           title="Delete">
                                            <i class="bi bi-trash"></i>
                                        </a>
                                    </div>
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .table th, .table td {
            vertical-align: middle;
        }

        .sticky-top {
            z-index: 1;
        }

        .table-responsive {
            min-height: 300px;
        }

        .btn-group .btn {
            padding: 0.25rem 0.5rem;
        }

        .table-hover tbody tr:hover {
            background-color: rgba(0, 0, 0, 0.05);
            transition: background-color 0.2s ease;
        }

        .table-hover tbody tr {
            transition: background-color 0.2s ease;
        }
    </style>
}